---
export interface Props {
  title: string;
  parent?: string;
  url: string;
  imageUrl: string;
  description: string;
  keywords: string[];
}


const { title, parent, description, keywords, url, imageUrl } = Astro.props;
const isDev = import.meta.env.DEV
---

<meta charset="utf-8" />
<meta http-equiv="x-ua-compatible" content="ie=edge" />
<meta
  name="viewport"
  content="width=device-width, initial-scale=1, shrink-to-fit=no"
/>
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
<meta name="msapplication-TileColor" content="#da532c" />
<meta name="theme-color" content="#ffffff" />
  <!-- HTML Meta Tags -->
<title>{title}{parent ? ` | ${parent}` : ''}</title>
<meta name="description" content={description} />
<meta name="keywords" content={keywords.join(', ')} />
<meta name="theme-color" content="#2b2b2b" />

<!-- Facebook Meta Tags -->
<meta property="og:url" content={url}>
<meta property="og:type" content="website">
<meta property="og:title" content={title}>
<meta property="og:description" content={description}>
<meta property="og:image" content={imageUrl}>

<!-- Twitter Meta Tags -->
<meta name="twitter:card" content="summary_large_image">
<meta property="twitter:domain" content="tusharf5.com">
<meta property="twitter:url" content={url}>
<meta name="twitter:title" content={title}>
<meta name="twitter:description" content={description}>
<meta name="twitter:image" content={imageUrl}>

      
<style lang="scss" is:global>
  @import '../styles/global.scss';
</style>
<script>
  function randomId() {
    const uint32 = window.crypto.getRandomValues(new Uint32Array(1))[0];
    return uint32.toString(16);
  }

  if (!window.localStorage.getItem('tusharsharma::uuid')) {
    window.localStorage.setItem('tusharsharma::uuid', randomId());
  }
</script>
<!-- Google tag (gtag.js) -->
{!isDev && <script  is:inline async src="https://www.googletagmanager.com/gtag/js?id=G-J07MLQ6PKJ"></script>}
{!isDev && <script is:inline>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-J07MLQ6PKJ');
</script>}
<!-- Google tag (gtag.js) -->
