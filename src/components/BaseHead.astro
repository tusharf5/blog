---
export interface Props {
  title: string;
  parent?: string;
  description: string;
  keywords: string[];
}

// Astro.url.pathname;

const { title, parent, description, keywords } = Astro.props;
---

<meta charset="utf-8" />
<meta http-equiv="x-ua-compatible" content="ie=edge" />
<meta
  name="viewport"
  content="width=device-width, initial-scale=1, shrink-to-fit=no"
/>
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
<link rel="manifest" href="/site.webmanifest">
<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5">
<meta name="msapplication-TileColor" content="#da532c">
<meta name="theme-color" content="#ffffff">
<title>{title}{parent ? ` | ${parent}` : ''}</title>
<meta name="description" content={description} />
<meta name="keywords" content={keywords.join(', ')} />
<meta name="theme-color" content="#2b2b2b" />

<style lang="scss">
  @import '../styles/global.scss';
</style>
<script>
  function randomId() {
    const uint32 = window.crypto.getRandomValues(new Uint32Array(1))[0];
    return uint32.toString(16);
  }

  if (!(window.localStorage.getItem('tusharsharma::uuid'))) {
    window.localStorage.setItem('tusharsharma::uuid', randomId());
  }
</script>
